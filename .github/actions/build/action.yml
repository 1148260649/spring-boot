name: 'Build'
description: 'Builds the project, optionally publishing it to a local deployment repository'
inputs:
  java-version:
    required: false
    default: '17'
    description: 'The Java version to compile and test with'
  java-toolchain:
    required: false
    default: false
    description: 'Whether a Java toolchain should be used'
  publish:
    required: false
    default: false
    description: 'Whether to publish artifacts ready for deployment to Artifactory'
  gradle-enterprise-secret-access-key:
    required: false
    description: 'The secret access key for authentication with ge.spring.io'
  gradle-enterprise-cache-user:
    required: false
    description: 'The username for authentication with the remote build cache'
  gradle-enterprise-cache-password:
    required: false
    description: 'The password for authentication with the remote build cache'
outputs:
  build-scan-url:
    description: 'The URL, if any, of the build scan produced by the build'
    value: ${{ (inputs.publish && steps.build-and-publish.outputs.build-scan-url) || steps.build.outputs.build-scan-url }}
  version:
    description: 'The version that was built'
    value: ${{ steps.read-version.outputs.version }}
runs:
  using: composite
  steps:
    - name: Prepare Gradle Build
      uses: ./.github/actions/prepare-gradle-build
      with:
        java-version: ${{ inputs.java-version }}
        java-toolchain: ${{ inputs.java-toolchain }}
    - name: Build
      id: build
      if: ${{ !inputs.publish }}
      shell: bash
      env:
        GRADLE_ENTERPRISE_URL: 'https://ge.spring.io'
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ inputs.gradle-enterprise-secret-access-key }}
        GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ inputs.gradle-enterprise-cache-user }}
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ inputs.gradle-enterprise-cache-password }}
      run: ./gradlew build
    - name: Build and Publish
      id: build-and-publish
      if: ${{ inputs.publish }}
      shell: bash
      env:
        GRADLE_ENTERPRISE_URL: 'https://ge.spring.io'
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ inputs.gradle-enterprise-secret-access-key }}
        GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ inputs.gradle-enterprise-cache-user }}
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ inputs.gradle-enterprise-cache-password }}
      run: ./gradlew -PdeploymentRepository=$(pwd)/deployment-repository build publishAllPublicationsToDeploymentRepository
    - name: Read Version From gradle.properties
      id: read-version
      shell: bash
      run: |
        version=$(sed -n 's/version=\(.*\)/\1/p' gradle.properties)
        echo "Version is $version"
        echo "version=$version" >> $GITHUB_OUTPUT
